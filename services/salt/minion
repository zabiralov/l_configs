# salt-minion(1)
# salt(7)

# Конфигурационный файл salt-minion - клиентской части системы управления
# конфигурациями SaltStack.

# ------------------------------------------------------------------------------

# Каждый minion использует свой уникальный id. По умолчанию, в качестве id
# используется результат вызова Python socket.getfqdn() который позволяет
# определить hostname на котором запущен данный minion. При необходимости,
# можно переопределить дефолтный id с помощью этой директивы.
# id: minion.example.com

# Добавлять указанное значение к результату socket.getfqdn() в случае, если
# этот результат не является FQDN.
# append_domain:

# FQDN мастер-сервера. В случае если это имя не возможно разрешить - minion
# не будет запущен. Опционально можно задействовать multi-master конфигурацию:
# http://docs.saltstack.com/en/latest/topics/tutorials/multimaster.html
master: salt.example.com

# Разрешить подключение к master через IPv6
ipv6: False

# Подключаться к master-серверу по указанному порту
master_port: 4506

# Пользователь, с правами которого будет запускаться salt
user: root

# Расположение PID-файла
pidfile: /var/run/salt-minion.pid


# ------------------------------------------------------------------------------
# Аутентификация и параметры безопасности

# Каталог для хранения ключей
pki_dir: /etc/salt/pki/minion

# Включить 'open mode'?  Этот режим подразуемывает взаимодействие без
# использования аутентификации.
open_mode: False

# Fingerprint ключа master-сервера можно использовать для двойной проверки
# подлинности master-сервера. Значение fingerprint можно получить выполнив
# каоманду 'salt-key -F master' на самом master-сервере.
# master_finger: ''


# ------------------------------------------------------------------------------
# Ведение журналов и отладка

# Расположение лог-файла
#log_file: /var/log/salt/minion

# Степень детализации сообщений, которые будут выводиться на терминал:
# 'garbage', 'trace', 'debug', info', 'warning', 'error', 'critical'.
log_level: info

# Степень детализации сообщений, которые будут выводиться в лог-файл:
# 'garbage', 'trace', 'debug', info', 'warning', 'error', 'critical'.
log_level_logfile: info

